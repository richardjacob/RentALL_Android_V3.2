query getPayouts{
  getPayouts  {
    results {
     id
    methodId
    paymentMethod{
         id
         name
    }
    userId
    payEmail
    address1
    address2
    city
    default
    state
    country
    zipcode
    currency
    createdAt
   last4Digits
    isVerified
    status
    }
  }
}

mutation confirmPayout ($currentAccountId: String) {
  confirmPayout (currentAccountId: $currentAccountId) {
    status
  }
}


mutation setDefaultPayout($id: Int!, $type: String!) {
    setDefaultPayout(id: $id, type: $type) {
        status
        errorMessage
    }
}


query getPaymentMethods{
  getPaymentMethods {
    results {
      id
      name
      processedIn
      fees
      currency
      details
      isEnable
      paymentType
    }
    status
    errorMessage
  }
}

mutation addPayout(
    $methodId: Int!,
    $payEmail: String!,
    $address1: String!,
    $address2: String!,
    $city: String!,
    $state: String!,
    $country: String!,
    $zipcode: String!,
    $currency: String!,
    $firstname: String,
    $lastname: String,
    $accountNumber: String,
    $routingNumber: String,
    $businessType: String,
    $accountToken: String,
    $personToken: String,
) {
    addPayout (
        methodId: $methodId
        payEmail: $payEmail
        address1: $address1
        address2: $address2
        city: $city
        state: $state
        country: $country
        zipcode: $zipcode
        currency: $currency,
        firstname: $firstname,
        lastname: $lastname,
        accountNumber: $accountNumber,
        routingNumber: $routingNumber,
        businessType: $businessType,
        accountToken: $accountToken,
        personToken: $personToken
    ) {
        status
        errorMessage
        connectUrl
        successUrl
        failureUrl
        stripeAccountId
    }
}


mutation verifyPayout(
  	$stripeAccount: String
) {
    verifyPayout (
    stripeAccount: $stripeAccount
    ) {
        status
        connectUrl
        successUrl
        failureUrl
        stripeAccountId
    }
}
